<?xml version="1.0"?>

<launch>
    
    <!-- run torso pid -->
   <!-- <node name="torso_pid" pkg="pid" type="controller" output="screen" >
      <param name="Kp" value="1.0" />
      <param name="Ki" value="0.0" />
      <param name="Kd" value="0.0" />
      <param name="upper_limit" value="2000" />
      <param name="lower_limit" value="1000" />
      <param name="windup_limit" value="10" />
      <param name="cutoff_frequency" value="20" />
      <param name="max_loop_frequency" value="30.0" />
      <param name="min_loop_frequency" value="25.0" />
      
      <param name="topic_from_controller" value="torso/pid_controller/effort" />
      <param name="topic_from_plant" value="torso/pid_controller/state" />
      <param name="setpoint_topic" value="torso/pid_controller/setpoint" />
    </node>-->

   <!-- <node name="servo_sim_node" pkg="pid" type="plant_sim" output="screen" >
      <param name="plant_order" value="2" />
    </node>

    <node name="setpoint_node" pkg="pid" type="setpoint_node" output="screen" />-->

    <!-- rqt_plot is a resource hog, so if you're seeing high CPU usage, don't launch rqt_plot  -->
   <!-- <node name="rqt_plot" pkg="rqt_plot" type="rqt_plot"
    args="torso/pid_controller/effort torso/pid_controller/state torso/pid_controller/setpoint" />

    <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" />-->

    <!--<node name="rqt_robot_monitor" pkg="rqt_robot_monitor" type="rqt_robot_monitor" />-->
    
    
    
    
<node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 /map /odom 20" />
<node pkg="tf" type="static_transform_publisher" name="odom_base_broadcaster" args="0 0 0 0 0 0 /odom /base_footprint 20" />

    <param name="robot_description" command="$(find xacro)/xacro.py '$(find armadillo2_description)/urdf/armadillo2.xacro'" />

    <node name="armadillo2_hw_node" pkg="armadillo2_hw" type="armadillo2_hw_node" respawn="false" output="screen" />

    <rosparam file="$(find armadillo2_hw)/config/dxl_joints_config.yaml" command="load"/>
    
    <rosparam file="$(find armadillo2_hw)/config/dxl_spec_config.yaml" command="load"/>

    <rosparam file="$(find armadillo2_hw)/config/battery_config.yaml" command="load"/>
    
    <rosparam file="$(find armadillo2_hw)/config/ricboard_config.yaml" command="load"/>
    
    <rosparam file="$(find armadillo2_hw)/config/roboteq_config.yaml" command="load"/>


<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
	
</launch>
