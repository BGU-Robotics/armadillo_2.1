<?xml version="1.0" encoding="UTF-8"?>

<!-- armadillo2 top-level launch -->

<launch>
    
    <!--common settings-->
    <arg name="sim" default="false" doc="execute armadillo2 inside gazebo sim"/>
    <arg name="moveit" default="false"/>
    <arg name="softkinetic" default="false"/>
    <arg name="kinect" default="false"/>
    <arg name="lidar" default="false"/>
    <arg name="gmapping" default="false"/>
    <arg name="hector_slam" default="false"/>
    <arg name="amcl" default="false"/>
    <arg name="move_base" default="false"/>
    <arg name="twist_mux" default="true"/>
    
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find armadillo2_description)/urdf/armadillo2_gazebo.xacro' --inorder" />
    
    <!--center robot head on startup -->
    <node name="center_head_node" pkg="center_head" type="center_head_node" respawn="false" output="screen" />
    
    <include file="$(find espeak_ros)/launch/espeak_ros.launch" />

    <!--if no one publish map-odom tf, load static tf-->
    <group unless="$(arg gmapping)">
        <group unless="$(arg hector_slam)">
            <group unless="$(arg amcl)">
            
                <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 /map /odom 20" />
                <!--<node pkg="tf" type="static_transform_publisher" name="odom_base_broadcaster" args="0 0 0 0 0 0 /odom /base_footprint 20" />-->
            
            </group>   
        </group>    
    </group>
    
    <!--load simulation stuff-->
    <group if="$(arg sim)">
        
        <include file="$(find armadillo2_gazebo)/launch/default_world.launch" />
        
        <include file="$(find armadillo2_control)/launch/armadillo2_gazebo_controllers.launch" />
        
    </group>
    
    <!--load hardware stuff-->
    <group unless="$(arg sim)">
        
        <include file="$(find armadillo2_hw)/launch/armadillo2_hw.launch" />
        
        <include file="$(find armadillo2_control)/launch/armadillo2_hw_controllers.launch" />
        
        <group if="$(arg softkinetic)">
            <include file="$(find softkinetic_camera)/launch/softkinetic_camera_ds325.launch" />
        </group>
    
        <group if="$(arg kinect)">
            <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch" />
        </group>
                
    </group>
    
    <group if="$(arg twist_mux)">
        <include file="$(find ros_twist_mux)/launch/twist_mux.launch" />
    </group>
    
    <group if="$(arg lidar)">
        <include file="$(find lidar_urg_node)/launch/lidar.launch" />
    </group>
    
    <group if="$(arg gmapping)">
        <include file="$(find armadillo2_navigation)/launch/gmapping.launch" />
    </group>
    
    <group if="$(arg hector_slam)">
        <include file="$(find armadillo2_navigation)/launch/hector_slam.launch" />
    </group>
    
    <group if="$(arg amcl)">
        <include file="$(find armadillo2_navigation)/launch/amcl.launch" />
    </group>
    
    <group if="$(arg moveit)">
        <include file="$(find armadillo2_moveit_config)/launch/move_group.launch" />
    </group>
    
    
    <group if="$(arg move_base)">
        <include file="$(find armadillo2_navigation)/launch/move_base.launch" />
        <rosparam file="$(find armadillo2_navigation)/config/move_base_params.yaml" command="load" ns="move_base"/>
        <rosparam file="$(find armadillo2_navigation)/config/costmap_common_params.yaml" command="load" ns="move_base/global_costmap" />
        <rosparam file="$(find armadillo2_navigation)/config/costmap_common_params.yaml" command="load" ns="move_base/local_costmap" />
        <rosparam file="$(find armadillo2_navigation)/config/local_costmap_params.yaml" command="load" ns="move_base/local_costmap" />
        <rosparam file="$(find armadillo2_navigation)/config/global_costmap_params.yaml" command="load" ns="move_base/global_costmap"/>
    </group>
    
</launch>